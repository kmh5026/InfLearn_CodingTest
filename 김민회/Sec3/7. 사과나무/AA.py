
# 사과나무 

import sys 
sys.stdin = open('/Users/kimmh/Desktop/Algorithm/Sec3/7. 사과나무/in5.txt', 'rt')

#--------------------------------------------------------------------------------# 
# 1. N x N 격자판 형식의 농장 (N은 홀수) 
# 2. 각 격자 안에는 한 그루의 사과나무 
# 3. 수확 시 격자판 안의 마름모 모양에 해당하는 나무들만 수확 / 나머지는 새들을 위해 남김 
# 
# 입력1) N (3 이상 20 이하의 홀수) 
# 입력2) N줄에 걸쳐 각 줄에 N개의 자연수 입력 (각 격자의 사과나무에 열린 사과 수) (각 수는 100 이하) 
# 출력) 수확한 사과의 총 개수 (마름모 모양꼴 합) 
#--------------------------------------------------------------------------------# 

N = int(input()) 

# 격자판 생성 
xx = [ list(map(int, input().split())) for _ in range(N) ] 

# N=7 > 4번째(idx=3)가 가운데 (N-1)/2 인덱스 지점 ( = N//2 ) 
# 0)                      (0, 3) 
# 1)               (1, 2) (1, 3) (1, 4) 
# 2)        (2, 1) (2, 2) (2, 3) (2, 4) (2, 5) 
# 3) (3, 0) (3, 1) (3, 2) (3, 3) (3, 4) (3, 5) (3, 6) 
# 4)        (4, 1) (4, 2) (4, 3) (4, 4) (4, 5) 
# 5)               (5, 2) (5, 3) (5, 4) 
# 6)                      (6, 3) 

apple = 0 

start = end = N//2      # 처음 범위 = 격자 가운데 지점 하나 

for i in range(N): 
    for j in range(start, end+1): 
        apple += xx[i][j]    # 해당 줄의 범위 sum 
    
    if i < N//2:        # 중간 줄 전까진 범위 늘림 
        start -= 1 
        end += 1 
    else:               # 중간 줄 이후부터는 범위 좁힘 
        start += 1 
        end -= 1 

print(apple) 

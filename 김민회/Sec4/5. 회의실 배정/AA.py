
# 회의실 배정 (그리디) ***** 

'''
# 그리디 알고리즘의 핵심 
: 정렬 ! 
: 그 후 최적의 선택을 하나씩 
'''


import sys 
sys.stdin = open('/Users/kimmh/Desktop/Algorithm/Sec4/5. 회의실 배정/in5.txt', 'rt') 

#--------------------------------------------------------------------------------# 
# 1. 1개의 회의실 / n개의 회의 >> 회의실 사용표 
# 2. 시작 시간, 끝나는 시간이 주어지고 각 회의는 겹치지 않도록 
# 3. 최대수의 회의 
# 
# 입력1) n (1 이상 10만 이하) 
# 입력2) N개 줄에 걸쳐 각 회의의 시작 시간 / 끝나는 시간 (공백) 
# 출력) 사용할 수 있는 최대 회의의 수 
#--------------------------------------------------------------------------------# 

n = int(input()) 

meeting = [] 

for _ in range(n): 
    a, b = map(int, input().split()) 
    meeting.append((a, b)) 

# (2, 3) (1, 4) (3, 5) (4, 6) (5, 7) : 끝나는 시간 기준 정렬 

meeting.sort( key = lambda x: (x[1], x[0]) )  # 1번 인덱스를 우선 기준으로 정렬 ***** 
                                              # 그냥 sort하면 튜플의 앞 값을 기준으로 정렬됨 

cnt = 0                         # 회의 수 
end_time = 0                    # 회의실 사용 끝나는 시간 

for start, end in meeting:      # 튜플의 값 각각 start와 end로 
    if start >= end_time:       # 이전 회의 끝난 이후에 시작이라면, 
        end_time = end          # 회의 배정 
        cnt += 1 

print(cnt) 

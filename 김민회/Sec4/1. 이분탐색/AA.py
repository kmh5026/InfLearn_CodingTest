
# 이분검색 ***** 

import sys 
sys.stdin = open('/Users/kimmh/Desktop/Algorithm/Sec4/1. 이분검색/in5.txt', 'rt') 

#--------------------------------------------------------------------------------# 
# 1. 임의의 N개 숫자 입력 > 오름차순 정렬 
# 2. N개 숫자 중 하나인 M이 주어지면, 그 숫자가 몇번째에 있는지 구하는 프로그램 작성 
# 
# 입력1) N, M (N은 3 이상 100만 이하) 
# 입력2) N개의 숫자 
# 출력) M의 위치 번호 
#--------------------------------------------------------------------------------# 

N, M = map(int, input().split()) 

num = list(map(int, input().split())) 

num.sort()                   # 이분탐색의 전제조건은 정렬 ***** 

# 정답은 맞지만 너무 간단해서 의문.. 
# 처음부터 순서대로 탐색 ( .index() 함수 사용 ) 
''' 
for i in num: 
    if i == M: 
        print(num.index(i) + 1) 
''' 


# 소스코드 방식 (이분탐색 방식) ***** 
# 좌한 / 우한 필요 

lt = 0 
rt = N-1 

while lt <= rt:             # 좌한이 우한을 넘어서면 탐색을 다 한 것 

    mid = (lt + rt) // 2    # 짝수개일 경우 왼쪽 숫자 
    # 좌한과 우한을 조정하면서 중간 지점이 M에 닿도록 
    
    if num[mid] == M: 
        print(mid + 1) 
        break 
    
    elif num[mid] > M:   # lt와 mid 사이에 M >> 우측 구간 필요없음 
        rt = mid - 1     # 탐색구간 절반으로 줄임 
    
    else:                # mid와 rt 사이에 M >> 좌측 구간 필요없음 
        lt = mid + 1     # 탐색구간 절반 

